{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\12018\\\\Rutgers-Bootcamp\\\\Reading-List\\\\ReadingList\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\12018\\\\Rutgers-Bootcamp\\\\Reading-List\\\\ReadingList\\\\client\\\\src\\\\pages\\\\Detail.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n\nfunction Detail(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      book = _useState2[0],\n      setBook = _useState2[1]; // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  console.log(\"useParam - id\", id);\n  useEffect(function () {\n    API.getBook(id).then(function (res) {\n      return setBook(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, book.title && book.author ? \"\".concat(book.title, \"  by \").concat(book.author) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, \"No Author with ID: \", id, \" found \"))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-10 md-offset-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Synopsis\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, book.synopsis)))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"\\u2190 Back to Authors\"))));\n}\n\nexport default Detail;","map":{"version":3,"sources":["C:/Users/12018/Rutgers-Bootcamp/Reading-List/ReadingList/client/src/pages/Detail.js"],"names":["React","useEffect","useState","Link","useParams","Col","Row","Container","Jumbotron","API","Detail","props","book","setBook","id","console","log","getBook","then","res","data","catch","err","title","author","synopsis"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,kBACGT,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,MACdU,IADc;AAAA,MACRC,OADQ,kBAGrB;AACA;;;AAJqB,mBAKNT,SAAS,EALH;AAAA,MAKbU,EALa,cAKbA,EALa;;AAMrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,EAA7B;AACAb,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,GAAG,CAACQ,OAAJ,CAAYH,EAAZ,EACGI,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIN,OAAO,CAACM,GAAG,CAACC,IAAL,CAAX;AAAA,KADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAAJ;AAAA,KAFZ;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIV,IAAI,CAACW,KAAL,IAAcX,IAAI,CAACY,MAApB,aACMZ,IAAI,CAACW,KADX,kBACyBX,IAAI,CAACY,MAD9B,iBAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAuBV,EAAvB,YAHF,CADA,CADF,CADF,CADF,eAaE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACa,QADR,CAFF,CADF,CADF,CAbF,eAuBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,CAvBF,CADJ;AA+BC;;AAGH,eAAef,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n\nfunction Detail(props) {\n  const [book, setBook] = useState({})\n\n  // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  const { id } = useParams()\n  console.log(\"useParam - id\", id);\n  useEffect(() => {\n    API.getBook(id)\n      .then(res => setBook(res.data))\n      .catch(err => console.log(err));\n  }, [])\n\n  return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n            <h1>\n              {(book.title && book.author) ?\n                (`${ book.title }  by ${book.author}`) :\n              <p>No Author with ID: {id} found </p>\n                }\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1>Synopsis</h1>\n              <p>\n                {book.synopsis}\n              </p>\n            </article>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-2\">\n            <Link to=\"/\">‚Üê Back to Authors</Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}